{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{getCourses}from\"../requests/getCourses\";import{CourseCard}from\"./CourseCard\";import{SideMenu}from\"./SideMenu\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CoursesList=()=>{const[courses,setCourses]=useState([]);const[selectedTag,setSelectedTag]=useState(\"\");const[tags,setTags]=useState([]);useEffect(()=>{getCourses().then(courses=>{setCourses(courses);const uniqueTags=Array.from(new Set(courses.flatMap(course=>course.tags)));setTags(uniqueTags);}).catch(console.error);},[]);console.log(selectedTag);const filteredCourses=selectedTag===\"\"?courses:courses.filter(course=>course.tags.includes(selectedTag));return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(SideMenu,{tags:tags,selectTag:setSelectedTag,selectedTag:selectedTag}),/*#__PURE__*/_jsx(\"div\",{className:\"courses-container\",children:filteredCourses.map(course=>/*#__PURE__*/_jsx(CourseCard,{course:course},course.id))})]});};","map":{"version":3,"names":["React","useState","useEffect","getCourses","CourseCard","SideMenu","jsx","_jsx","jsxs","_jsxs","CoursesList","courses","setCourses","selectedTag","setSelectedTag","tags","setTags","then","uniqueTags","Array","from","Set","flatMap","course","catch","console","error","log","filteredCourses","filter","includes","className","children","selectTag","map","id"],"sources":["/Users/aleksandra/Projects/logic-like/src/components/CoursesList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Course } from \"../types/Course\";\nimport { getCourses } from \"../requests/getCourses\";\n\nimport { CourseCard } from \"./CourseCard\";\nimport { SideMenu } from \"./SideMenu\";\n\nexport const CoursesList: React.FC = () => {\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [selectedTag, setSelectedTag] = useState<string>(\"\");\n  const [tags, setTags] = useState<string[]>([]);\n\n  useEffect(() => {\n    getCourses()\n      .then((courses) => {\n        setCourses(courses);\n        const uniqueTags = Array.from(\n          new Set(courses.flatMap((course) => course.tags))\n        );\n        setTags(uniqueTags);\n      })\n      .catch(console.error);\n  }, []);\n\n  console.log(selectedTag)\n\n  const filteredCourses =\n    selectedTag === \"\"\n      ? courses\n      : courses.filter((course) => course.tags.includes(selectedTag));\n\n  return (\n    <div className=\"app-container\">\n      <SideMenu\n        tags={tags}\n        selectTag={setSelectedTag}\n        selectedTag={selectedTag}\n      />\n      <div className=\"courses-container\">\n        \n        {filteredCourses.map((course) => (\n          <CourseCard key={course.id} course={course} />\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,OAASC,UAAU,KAAQ,wBAAwB,CAEnD,OAASC,UAAU,KAAQ,cAAc,CACzC,OAASC,QAAQ,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,MAAO,MAAM,CAAAC,WAAqB,CAAGA,CAAA,GAAM,CACzC,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAW,EAAE,CAAC,CACpD,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAS,EAAE,CAAC,CAC1D,KAAM,CAACc,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAW,EAAE,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACdC,UAAU,CAAC,CAAC,CACTc,IAAI,CAAEN,OAAO,EAAK,CACjBC,UAAU,CAACD,OAAO,CAAC,CACnB,KAAM,CAAAO,UAAU,CAAGC,KAAK,CAACC,IAAI,CAC3B,GAAI,CAAAC,GAAG,CAACV,OAAO,CAACW,OAAO,CAAEC,MAAM,EAAKA,MAAM,CAACR,IAAI,CAAC,CAClD,CAAC,CACDC,OAAO,CAACE,UAAU,CAAC,CACrB,CAAC,CAAC,CACDM,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CACzB,CAAC,CAAE,EAAE,CAAC,CAEND,OAAO,CAACE,GAAG,CAACd,WAAW,CAAC,CAExB,KAAM,CAAAe,eAAe,CACnBf,WAAW,GAAK,EAAE,CACdF,OAAO,CACPA,OAAO,CAACkB,MAAM,CAAEN,MAAM,EAAKA,MAAM,CAACR,IAAI,CAACe,QAAQ,CAACjB,WAAW,CAAC,CAAC,CAEnE,mBACEJ,KAAA,QAAKsB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BzB,IAAA,CAACF,QAAQ,EACPU,IAAI,CAAEA,IAAK,CACXkB,SAAS,CAAEnB,cAAe,CAC1BD,WAAW,CAAEA,WAAY,CAC1B,CAAC,cACFN,IAAA,QAAKwB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAE/BJ,eAAe,CAACM,GAAG,CAAEX,MAAM,eAC1BhB,IAAA,CAACH,UAAU,EAAiBmB,MAAM,CAAEA,MAAO,EAA1BA,MAAM,CAACY,EAAqB,CAC9C,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}