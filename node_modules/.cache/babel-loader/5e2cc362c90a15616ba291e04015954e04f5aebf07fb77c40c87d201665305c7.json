{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Projects/logic-like/src/components/CoursesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCourses } from '../requests/getCourses';\nimport { CourseCard } from './CourseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoursesList = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    getCourses().then(setCourses).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filter by tag\",\n      value: filter,\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courses-container\",\n      children: filteredCourses.map(course => /*#__PURE__*/_jsxDEV(CourseCard, {\n        course: course\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(CoursesList, \"dFfyt766QytILupwW9wXEDB7dDU=\");\n_c = CoursesList;\nexport default CoursesList;\nvar _c;\n$RefreshReg$(_c, \"CoursesList\");","map":{"version":3,"names":["React","useState","useEffect","getCourses","CourseCard","jsxDEV","_jsxDEV","CoursesList","_s","courses","setCourses","filter","setFilter","then","catch","console","error","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","className","filteredCourses","map","course","id","_c","$RefreshReg$"],"sources":["/Users/aleksandra/Projects/logic-like/src/components/CoursesList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getCourses } from '../requests/getCourses';\nimport { Course } from '../types/Course';\nimport { CourseCard } from './CourseCard';\n\n\n\nconst CoursesList: React.FC = () => {\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  useEffect(() => {\n    getCourses().then(setCourses).catch(console.error);\n  }, []);\n\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Filter by tag\"\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n      />\n      <div className=\"courses-container\">\n        {filteredCourses.map(course => (\n          <CourseCard key={course.id} course={course} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CoursesList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,wBAAwB;AAEnD,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1C,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdC,UAAU,CAAC,CAAC,CAACU,IAAI,CAACH,UAAU,CAAC,CAACI,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MACEY,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAET,MAAO;MACdU,QAAQ,EAAGC,CAAC,IAAKV,SAAS,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrB,OAAA;MAAKsB,SAAS,EAAC,mBAAmB;MAAAX,QAAA,EAC/BY,eAAe,CAACC,GAAG,CAACC,MAAM,iBACzBzB,OAAA,CAACF,UAAU;QAAiB2B,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxBID,WAAqB;AAAA0B,EAAA,GAArB1B,WAAqB;AA0B3B,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}